{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/deployments/": {
      "get": {
        "summary": "Read Deployments",
        "description": "Returns a list of active deployments.",
        "operationId": "read_deployments_deployments__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeploymentDefinition"
                  },
                  "type": "array",
                  "title": "Response Read Deployments Deployments  Get"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}": {
      "get": {
        "summary": "Read Deployment",
        "description": "Returns the details of a specific deployment.",
        "operationId": "read_deployment_deployments__deployment_name__get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/create": {
      "post": {
        "summary": "Create Deployment",
        "description": "Creates a new deployment by uploading a configuration file.",
        "operationId": "create_deployment_deployments_create_post",
        "parameters": [
          {
            "name": "base_path",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": ".", "title": "Base Path" }
          },
          {
            "name": "reload",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false, "title": "Reload" }
          },
          {
            "name": "local",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false, "title": "Local" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_deployment_deployments_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/tasks/run": {
      "post": {
        "summary": "Create Deployment Task",
        "description": "Create a task for the deployment, wait for result and delete associated session.",
        "operationId": "create_deployment_task_deployments__deployment_name__tasks_run_post",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskDefinition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/tasks/create": {
      "post": {
        "summary": "Create Deployment Task Nowait",
        "description": "Create a task for the deployment but don't wait for result.",
        "operationId": "create_deployment_task_nowait_deployments__deployment_name__tasks_create_post",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskDefinition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskDefinition" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/tasks/{task_id}/events": {
      "post": {
        "summary": "Send Event",
        "description": "Send a human response event to a service for a specific task and session.",
        "operationId": "send_event_deployments__deployment_name__tasks__task_id__events_post",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Task Id" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Session Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventDefinition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventDefinition" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Events",
        "description": "Get the stream of events from a given task and session.\n\nArgs:\n    raw_event (bool, default=False): Whether to return the raw event object\n        or just the event data.",
        "operationId": "get_events_deployments__deployment_name__tasks__task_id__events_get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Task Id" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Session Id" }
          },
          {
            "name": "raw_event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Raw Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/tasks/{task_id}/results": {
      "get": {
        "summary": "Get Task Result",
        "description": "Get the task result associated with a task and session.",
        "operationId": "get_task_result_deployments__deployment_name__tasks__task_id__results_get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Task Id" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Session Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/TaskResult" },
                    { "type": "null" }
                  ],
                  "title": "Response Get Task Result Deployments  Deployment Name  Tasks  Task Id  Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/tasks": {
      "get": {
        "summary": "Get Tasks",
        "description": "Get all the tasks from all the sessions in a given deployment.",
        "operationId": "get_tasks_deployments__deployment_name__tasks_get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TaskDefinition" },
                  "title": "Response Get Tasks Deployments  Deployment Name  Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/sessions": {
      "get": {
        "summary": "Get Sessions",
        "description": "Get the active sessions in a deployment and service.",
        "operationId": "get_sessions_deployments__deployment_name__sessions_get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SessionDefinition" },
                  "title": "Response Get Sessions Deployments  Deployment Name  Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/sessions/{session_id}": {
      "get": {
        "summary": "Get Session",
        "description": "Get the definition of a session by ID.",
        "operationId": "get_session_deployments__deployment_name__sessions__session_id__get",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Session Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionDefinition" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/sessions/create": {
      "post": {
        "summary": "Create Session",
        "description": "Create a new session for a deployment.",
        "operationId": "create_session_deployments__deployment_name__sessions_create_post",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionDefinition" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/sessions/delete": {
      "post": {
        "summary": "Delete Session",
        "description": "Get the active sessions in a deployment and service.",
        "operationId": "delete_session_deployments__deployment_name__sessions_delete_post",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Session Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/ui": {
      "delete": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "options": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui_delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/ui/{path}": {
      "delete": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "options": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Proxy",
        "operationId": "proxy_deployments__deployment_name__ui__path__delete",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Deployment Name" }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/status/": {
      "get": {
        "summary": "Status",
        "operationId": "status_status__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Status" }
              }
            }
          }
        }
      }
    },
    "/status/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Proxies the Prometheus metrics endpoint through the API Server.\n\nThis endpoint is mostly used in serverless environments where the LlamaDeploy\ncontainer cannot expose more than one port (e.g. Knative, Google Cloud Run).\nIf Prometheus is not enabled, this endpoint returns an empty HTTP-204 response.",
        "operationId": "metrics_status_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudioBlock": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "audio",
            "title": "Block Type",
            "default": "audio"
          },
          "audio": {
            "anyOf": [
              { "type": "string", "format": "binary" },
              { "type": "null" }
            ],
            "title": "Audio"
          },
          "path": {
            "anyOf": [
              { "type": "string", "format": "file-path" },
              { "type": "null" }
            ],
            "title": "Path"
          },
          "url": {
            "anyOf": [
              { "type": "string", "minLength": 1, "format": "uri" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Url"
          },
          "format": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Format"
          }
        },
        "type": "object",
        "title": "AudioBlock"
      },
      "Body_create_deployment_deployments_create_post": {
        "properties": {
          "config_file": {
            "type": "string",
            "format": "binary",
            "title": "Config File"
          }
        },
        "type": "object",
        "required": ["config_file"],
        "title": "Body_create_deployment_deployments_create_post"
      },
      "ChatMessage": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/MessageRole",
            "default": "user"
          },
          "additional_kwargs": { "title": "Additional Kwargs" },
          "blocks": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/TextBlock" },
                { "$ref": "#/components/schemas/ImageBlock" },
                { "$ref": "#/components/schemas/AudioBlock" },
                { "$ref": "#/components/schemas/DocumentBlock" }
              ],
              "discriminator": {
                "propertyName": "block_type",
                "mapping": {
                  "audio": "#/components/schemas/AudioBlock",
                  "document": "#/components/schemas/DocumentBlock",
                  "image": "#/components/schemas/ImageBlock",
                  "text": "#/components/schemas/TextBlock"
                }
              }
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "title": "ChatMessage",
        "description": "Chat message."
      },
      "DeploymentDefinition": {
        "properties": { "name": { "type": "string", "title": "Name" } },
        "type": "object",
        "required": ["name"],
        "title": "DeploymentDefinition"
      },
      "DocumentBlock": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "document",
            "title": "Block Type",
            "default": "document"
          },
          "data": {
            "anyOf": [
              { "type": "string", "format": "binary" },
              { "type": "null" }
            ],
            "title": "Data"
          },
          "path": {
            "anyOf": [
              { "type": "string", "format": "file-path" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Path"
          },
          "url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Url"
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title"
          },
          "document_mimetype": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Document Mimetype"
          }
        },
        "type": "object",
        "title": "DocumentBlock"
      },
      "EventDefinition": {
        "properties": {
          "service_id": { "type": "string", "title": "Service Id" },
          "event_obj_str": { "type": "string", "title": "Event Obj Str" }
        },
        "type": "object",
        "required": ["service_id", "event_obj_str"],
        "title": "EventDefinition",
        "description": "The definition of event.\n\nTo be used as payloads for service endpoints when wanting to send serialized\nEvents.\n\nAttributes:\n    event_object_str (str): serialized string of event."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageBlock": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "image",
            "title": "Block Type",
            "default": "image"
          },
          "image": {
            "anyOf": [
              { "type": "string", "format": "binary" },
              { "type": "null" }
            ],
            "title": "Image"
          },
          "path": {
            "anyOf": [
              { "type": "string", "format": "file-path" },
              { "type": "null" }
            ],
            "title": "Path"
          },
          "url": {
            "anyOf": [
              { "type": "string", "minLength": 1, "format": "uri" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Url"
          },
          "image_mimetype": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Mimetype"
          },
          "detail": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "ImageBlock"
      },
      "MessageRole": {
        "type": "string",
        "enum": [
          "system",
          "developer",
          "user",
          "assistant",
          "function",
          "tool",
          "chatbot",
          "model"
        ],
        "title": "MessageRole",
        "description": "Message role."
      },
      "SessionDefinition": {
        "properties": {
          "session_id": { "type": "string", "title": "Session Id" },
          "task_ids": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Task Ids"
          },
          "state": {
            "additionalProperties": true,
            "type": "object",
            "title": "State"
          }
        },
        "type": "object",
        "title": "SessionDefinition",
        "description": "The definition of a session.\n\nAttributes:\n    session_id (str):\n        The session ID. Defaults to a random UUID.\n    task_definitions (list[str]):\n        The task ids in order, representing the session.\n    state (dict):\n        The current session state."
      },
      "Status": {
        "properties": {
          "status": { "$ref": "#/components/schemas/StatusEnum" },
          "status_message": { "type": "string", "title": "Status Message" },
          "max_deployments": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Deployments"
          },
          "deployments": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Deployments"
          }
        },
        "type": "object",
        "required": ["status", "status_message"],
        "title": "Status"
      },
      "StatusEnum": {
        "type": "string",
        "enum": ["Healthy", "Unhealthy", "Down"],
        "title": "StatusEnum"
      },
      "TaskDefinition": {
        "properties": {
          "input": { "type": "string", "title": "Input" },
          "task_id": { "type": "string", "title": "Task Id" },
          "session_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Session Id"
          },
          "service_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Service Id"
          }
        },
        "type": "object",
        "required": ["input"],
        "title": "TaskDefinition",
        "description": "The definition and state of a task.\n\nAttributes:\n    input (str):\n        The task input.\n    session_id (str):\n        The session ID that the task belongs to.\n    task_id (str):\n        The task ID. Defaults to a random UUID.\n    service_id (str):\n        The service ID that the task should be sent to.\n        If blank, the orchestrator decides."
      },
      "TaskResult": {
        "properties": {
          "task_id": { "type": "string", "title": "Task Id" },
          "history": {
            "items": { "$ref": "#/components/schemas/ChatMessage" },
            "type": "array",
            "title": "History"
          },
          "result": { "type": "string", "title": "Result" },
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["task_id", "history", "result"],
        "title": "TaskResult",
        "description": "The result of a task.\n\nAttributes:\n    task_id (str):\n        The task ID.\n    history (list[ChatMessage]):\n        The task history.\n    result (str):\n        The task result.\n    data (dict):\n        Additional data about the task or result."
      },
      "TextBlock": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "text",
            "title": "Block Type",
            "default": "text"
          },
          "text": { "type": "string", "title": "Text" }
        },
        "type": "object",
        "required": ["text"],
        "title": "TextBlock"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
