name: E2E Testing

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    # E2E tests might get stuck, timeout aggressively for faster feedback
    timeout-minutes: 10
    strategy:
      # Let the matrix finish to see if the failure was transient
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        test-package:
          [
            "basic_hitl",
            "basic_streaming",
            "deploy",
            "apiserver",
            "basic_session",
            "basic_workflow",
            "core",
          ]
    steps:
      - uses: actions/checkout@v3

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run All E2E Tests
        run: uv run -- pytest e2e_tests/${{ matrix.test-package }} -s

  e2e-message-queues:
    runs-on: ubuntu-latest
    # E2E tests might get stuck, timeout aggressively for faster feedback
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    strategy:
      # Let the matrix finish to see if the failure was transient
      fail-fast: false
      matrix:
        test-package: ["aws", "kafka", "rabbitmq", "redis", "simple"]
    steps:
      - uses: actions/checkout@v3

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5

      - name: Run E2E Tests for message queues
        run: uv run -- pytest e2e_tests/message_queues/${{ matrix.test-package }} -s
